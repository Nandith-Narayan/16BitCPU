// Generated from java-escape by ANTLR 4.11.1
package parser;
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast", "CheckReturnValue"})
public class AssemblyLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.11.1", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, OPCODE_SIMPLE=6, OPCODE_COMPOUND=7, 
		SPACE=8, DECIMAL_LITERAL=9, HEX_LITERAL=10, BINARY_LITERAL=11, IDENTIFIER=12, 
		NEWLINE=13, WS=14;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"T__0", "T__1", "T__2", "T__3", "T__4", "OPCODE_SIMPLE", "OPCODE_COMPOUND", 
			"SPACE", "DECIMAL_LITERAL", "HEX_LITERAL", "BINARY_LITERAL", "IDENTIFIER", 
			"NEWLINE", "WS"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, "'$'", "':'", "'const'", "'='", "'var'", null, null, "' '"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, null, null, null, null, null, "OPCODE_SIMPLE", "OPCODE_COMPOUND", 
			"SPACE", "DECIMAL_LITERAL", "HEX_LITERAL", "BINARY_LITERAL", "IDENTIFIER", 
			"NEWLINE", "WS"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public AssemblyLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "Assembly.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\u0004\u0000\u000e\u00af\u0006\uffff\uffff\u0002\u0000\u0007\u0000\u0002"+
		"\u0001\u0007\u0001\u0002\u0002\u0007\u0002\u0002\u0003\u0007\u0003\u0002"+
		"\u0004\u0007\u0004\u0002\u0005\u0007\u0005\u0002\u0006\u0007\u0006\u0002"+
		"\u0007\u0007\u0007\u0002\b\u0007\b\u0002\t\u0007\t\u0002\n\u0007\n\u0002"+
		"\u000b\u0007\u000b\u0002\f\u0007\f\u0002\r\u0007\r\u0001\u0000\u0001\u0000"+
		"\u0001\u0001\u0001\u0001\u0001\u0002\u0001\u0002\u0001\u0002\u0001\u0002"+
		"\u0001\u0002\u0001\u0002\u0001\u0003\u0001\u0003\u0001\u0004\u0001\u0004"+
		"\u0001\u0004\u0001\u0004\u0001\u0005\u0001\u0005\u0001\u0005\u0001\u0005"+
		"\u0001\u0005\u0001\u0005\u0001\u0005\u0001\u0005\u0001\u0005\u0001\u0005"+
		"\u0001\u0005\u0001\u0005\u0001\u0005\u0001\u0005\u0001\u0005\u0001\u0005"+
		"\u0001\u0005\u0001\u0005\u0001\u0005\u0001\u0005\u0001\u0005\u0001\u0005"+
		"\u0001\u0005\u0001\u0005\u0001\u0005\u0001\u0005\u0001\u0005\u0001\u0005"+
		"\u0001\u0005\u0001\u0005\u0003\u0005L\b\u0005\u0001\u0006\u0001\u0006"+
		"\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0006"+
		"\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0006"+
		"\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0006"+
		"\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0006"+
		"\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0006"+
		"\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0006"+
		"\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0006"+
		"\u0001\u0006\u0001\u0006\u0001\u0006\u0003\u0006}\b\u0006\u0001\u0007"+
		"\u0001\u0007\u0001\b\u0001\b\u0003\b\u0083\b\b\u0001\b\u0001\b\u0005\b"+
		"\u0087\b\b\n\b\f\b\u008a\t\b\u0001\t\u0001\t\u0001\t\u0001\t\u0001\t\u0005"+
		"\t\u0091\b\t\n\t\f\t\u0094\t\t\u0001\n\u0001\n\u0001\n\u0001\n\u0001\n"+
		"\u0005\n\u009b\b\n\n\n\f\n\u009e\t\n\u0001\u000b\u0001\u000b\u0005\u000b"+
		"\u00a2\b\u000b\n\u000b\f\u000b\u00a5\t\u000b\u0001\f\u0003\f\u00a8\b\f"+
		"\u0001\f\u0001\f\u0003\f\u00ac\b\f\u0001\r\u0001\r\u0000\u0000\u000e\u0001"+
		"\u0001\u0003\u0002\u0005\u0003\u0007\u0004\t\u0005\u000b\u0006\r\u0007"+
		"\u000f\b\u0011\t\u0013\n\u0015\u000b\u0017\f\u0019\r\u001b\u000e\u0001"+
		"\u0000\t\u0001\u000009\u0002\u000009__\u0003\u000009AFaf\u0004\u00000"+
		"9AF__af\u0001\u000001\u0002\u000001__\u0003\u0000AZ__az\u0004\u000009"+
		"AZ__az\u0002\u0000\t\t  \u00cb\u0000\u0001\u0001\u0000\u0000\u0000\u0000"+
		"\u0003\u0001\u0000\u0000\u0000\u0000\u0005\u0001\u0000\u0000\u0000\u0000"+
		"\u0007\u0001\u0000\u0000\u0000\u0000\t\u0001\u0000\u0000\u0000\u0000\u000b"+
		"\u0001\u0000\u0000\u0000\u0000\r\u0001\u0000\u0000\u0000\u0000\u000f\u0001"+
		"\u0000\u0000\u0000\u0000\u0011\u0001\u0000\u0000\u0000\u0000\u0013\u0001"+
		"\u0000\u0000\u0000\u0000\u0015\u0001\u0000\u0000\u0000\u0000\u0017\u0001"+
		"\u0000\u0000\u0000\u0000\u0019\u0001\u0000\u0000\u0000\u0000\u001b\u0001"+
		"\u0000\u0000\u0000\u0001\u001d\u0001\u0000\u0000\u0000\u0003\u001f\u0001"+
		"\u0000\u0000\u0000\u0005!\u0001\u0000\u0000\u0000\u0007\'\u0001\u0000"+
		"\u0000\u0000\t)\u0001\u0000\u0000\u0000\u000bK\u0001\u0000\u0000\u0000"+
		"\r|\u0001\u0000\u0000\u0000\u000f~\u0001\u0000\u0000\u0000\u0011\u0082"+
		"\u0001\u0000\u0000\u0000\u0013\u008b\u0001\u0000\u0000\u0000\u0015\u0095"+
		"\u0001\u0000\u0000\u0000\u0017\u009f\u0001\u0000\u0000\u0000\u0019\u00ab"+
		"\u0001\u0000\u0000\u0000\u001b\u00ad\u0001\u0000\u0000\u0000\u001d\u001e"+
		"\u0005$\u0000\u0000\u001e\u0002\u0001\u0000\u0000\u0000\u001f \u0005:"+
		"\u0000\u0000 \u0004\u0001\u0000\u0000\u0000!\"\u0005c\u0000\u0000\"#\u0005"+
		"o\u0000\u0000#$\u0005n\u0000\u0000$%\u0005s\u0000\u0000%&\u0005t\u0000"+
		"\u0000&\u0006\u0001\u0000\u0000\u0000\'(\u0005=\u0000\u0000(\b\u0001\u0000"+
		"\u0000\u0000)*\u0005v\u0000\u0000*+\u0005a\u0000\u0000+,\u0005r\u0000"+
		"\u0000,\n\u0001\u0000\u0000\u0000-.\u0005N\u0000\u0000./\u0005O\u0000"+
		"\u0000/L\u0005P\u0000\u000001\u0005A\u0000\u000012\u0005D\u0000\u0000"+
		"23\u0005D\u0000\u00003L\u0005A\u0000\u000045\u0005A\u0000\u000056\u0005"+
		"D\u0000\u000067\u0005D\u0000\u00007L\u0005B\u0000\u000089\u0005S\u0000"+
		"\u00009:\u0005U\u0000\u0000:;\u0005B\u0000\u0000;L\u0005A\u0000\u0000"+
		"<=\u0005S\u0000\u0000=>\u0005U\u0000\u0000>?\u0005B\u0000\u0000?L\u0005"+
		"B\u0000\u0000@A\u0005H\u0000\u0000AB\u0005L\u0000\u0000BL\u0005T\u0000"+
		"\u0000CD\u0005X\u0000\u0000DE\u0005O\u0000\u0000EL\u0005R\u0000\u0000"+
		"FG\u0005A\u0000\u0000GH\u0005N\u0000\u0000HL\u0005D\u0000\u0000IJ\u0005"+
		"O\u0000\u0000JL\u0005R\u0000\u0000K-\u0001\u0000\u0000\u0000K0\u0001\u0000"+
		"\u0000\u0000K4\u0001\u0000\u0000\u0000K8\u0001\u0000\u0000\u0000K<\u0001"+
		"\u0000\u0000\u0000K@\u0001\u0000\u0000\u0000KC\u0001\u0000\u0000\u0000"+
		"KF\u0001\u0000\u0000\u0000KI\u0001\u0000\u0000\u0000L\f\u0001\u0000\u0000"+
		"\u0000MN\u0005A\u0000\u0000NO\u0005D\u0000\u0000O}\u0005D\u0000\u0000"+
		"PQ\u0005A\u0000\u0000QR\u0005D\u0000\u0000RS\u0005D\u0000\u0000S}\u0005"+
		"I\u0000\u0000TU\u0005S\u0000\u0000UV\u0005U\u0000\u0000V}\u0005B\u0000"+
		"\u0000WX\u0005S\u0000\u0000XY\u0005U\u0000\u0000YZ\u0005B\u0000\u0000"+
		"Z}\u0005I\u0000\u0000[\\\u0005L\u0000\u0000\\]\u0005D\u0000\u0000]}\u0005"+
		"A\u0000\u0000^_\u0005L\u0000\u0000_`\u0005D\u0000\u0000`a\u0005A\u0000"+
		"\u0000a}\u0005I\u0000\u0000bc\u0005L\u0000\u0000cd\u0005D\u0000\u0000"+
		"d}\u0005B\u0000\u0000ef\u0005L\u0000\u0000fg\u0005D\u0000\u0000gh\u0005"+
		"B\u0000\u0000h}\u0005I\u0000\u0000ij\u0005S\u0000\u0000jk\u0005T\u0000"+
		"\u0000k}\u0005A\u0000\u0000lm\u0005S\u0000\u0000mn\u0005T\u0000\u0000"+
		"n}\u0005B\u0000\u0000op\u0005J\u0000\u0000pq\u0005M\u0000\u0000q}\u0005"+
		"P\u0000\u0000rs\u0005J\u0000\u0000s}\u0005C\u0000\u0000tu\u0005J\u0000"+
		"\u0000u}\u0005Z\u0000\u0000vw\u0005J\u0000\u0000wx\u0005N\u0000\u0000"+
		"x}\u0005C\u0000\u0000yz\u0005J\u0000\u0000z{\u0005N\u0000\u0000{}\u0005"+
		"Z\u0000\u0000|M\u0001\u0000\u0000\u0000|P\u0001\u0000\u0000\u0000|T\u0001"+
		"\u0000\u0000\u0000|W\u0001\u0000\u0000\u0000|[\u0001\u0000\u0000\u0000"+
		"|^\u0001\u0000\u0000\u0000|b\u0001\u0000\u0000\u0000|e\u0001\u0000\u0000"+
		"\u0000|i\u0001\u0000\u0000\u0000|l\u0001\u0000\u0000\u0000|o\u0001\u0000"+
		"\u0000\u0000|r\u0001\u0000\u0000\u0000|t\u0001\u0000\u0000\u0000|v\u0001"+
		"\u0000\u0000\u0000|y\u0001\u0000\u0000\u0000}\u000e\u0001\u0000\u0000"+
		"\u0000~\u007f\u0005 \u0000\u0000\u007f\u0010\u0001\u0000\u0000\u0000\u0080"+
		"\u0081\u00050\u0000\u0000\u0081\u0083\u0005d\u0000\u0000\u0082\u0080\u0001"+
		"\u0000\u0000\u0000\u0082\u0083\u0001\u0000\u0000\u0000\u0083\u0084\u0001"+
		"\u0000\u0000\u0000\u0084\u0088\u0007\u0000\u0000\u0000\u0085\u0087\u0007"+
		"\u0001\u0000\u0000\u0086\u0085\u0001\u0000\u0000\u0000\u0087\u008a\u0001"+
		"\u0000\u0000\u0000\u0088\u0086\u0001\u0000\u0000\u0000\u0088\u0089\u0001"+
		"\u0000\u0000\u0000\u0089\u0012\u0001\u0000\u0000\u0000\u008a\u0088\u0001"+
		"\u0000\u0000\u0000\u008b\u008c\u00050\u0000\u0000\u008c\u008d\u0005x\u0000"+
		"\u0000\u008d\u008e\u0001\u0000\u0000\u0000\u008e\u0092\u0007\u0002\u0000"+
		"\u0000\u008f\u0091\u0007\u0003\u0000\u0000\u0090\u008f\u0001\u0000\u0000"+
		"\u0000\u0091\u0094\u0001\u0000\u0000\u0000\u0092\u0090\u0001\u0000\u0000"+
		"\u0000\u0092\u0093\u0001\u0000\u0000\u0000\u0093\u0014\u0001\u0000\u0000"+
		"\u0000\u0094\u0092\u0001\u0000\u0000\u0000\u0095\u0096\u00050\u0000\u0000"+
		"\u0096\u0097\u0005b\u0000\u0000\u0097\u0098\u0001\u0000\u0000\u0000\u0098"+
		"\u009c\u0007\u0004\u0000\u0000\u0099\u009b\u0007\u0005\u0000\u0000\u009a"+
		"\u0099\u0001\u0000\u0000\u0000\u009b\u009e\u0001\u0000\u0000\u0000\u009c"+
		"\u009a\u0001\u0000\u0000\u0000\u009c\u009d\u0001\u0000\u0000\u0000\u009d"+
		"\u0016\u0001\u0000\u0000\u0000\u009e\u009c\u0001\u0000\u0000\u0000\u009f"+
		"\u00a3\u0007\u0006\u0000\u0000\u00a0\u00a2\u0007\u0007\u0000\u0000\u00a1"+
		"\u00a0\u0001\u0000\u0000\u0000\u00a2\u00a5\u0001\u0000\u0000\u0000\u00a3"+
		"\u00a1\u0001\u0000\u0000\u0000\u00a3\u00a4\u0001\u0000\u0000\u0000\u00a4"+
		"\u0018\u0001\u0000\u0000\u0000\u00a5\u00a3\u0001\u0000\u0000\u0000\u00a6"+
		"\u00a8\u0005\r\u0000\u0000\u00a7\u00a6\u0001\u0000\u0000\u0000\u00a7\u00a8"+
		"\u0001\u0000\u0000\u0000\u00a8\u00a9\u0001\u0000\u0000\u0000\u00a9\u00ac"+
		"\u0005\n\u0000\u0000\u00aa\u00ac\u0005\r\u0000\u0000\u00ab\u00a7\u0001"+
		"\u0000\u0000\u0000\u00ab\u00aa\u0001\u0000\u0000\u0000\u00ac\u001a\u0001"+
		"\u0000\u0000\u0000\u00ad\u00ae\u0007\b\u0000\u0000\u00ae\u001c\u0001\u0000"+
		"\u0000\u0000\n\u0000K|\u0082\u0088\u0092\u009c\u00a3\u00a7\u00ab\u0000";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}